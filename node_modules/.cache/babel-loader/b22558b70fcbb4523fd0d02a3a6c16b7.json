{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.preventTouchMove = preventTouchMove;\nexports.allowTouchMove = allowTouchMove;\nexports.preventInertiaScroll = preventInertiaScroll;\nexports.isTouchDevice = isTouchDevice;\nfunction preventTouchMove(e) {\n  e.preventDefault();\n}\nfunction allowTouchMove(e) {\n  e.stopPropagation();\n}\nfunction preventInertiaScroll() {\n  var top = this.scrollTop;\n  var totalScroll = this.scrollHeight;\n  var currentScroll = top + this.offsetHeight;\n  if (top === 0) {\n    this.scrollTop = 1;\n  } else if (currentScroll === totalScroll) {\n    this.scrollTop = top - 1;\n  }\n} // `ontouchstart` check works on most browsers\n// `maxTouchPoints` works on IE10/11 and Surface\n\nfunction isTouchDevice() {\n  return 'ontouchstart' in window || navigator.maxTouchPoints;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","preventTouchMove","allowTouchMove","preventInertiaScroll","isTouchDevice","e","preventDefault","stopPropagation","top","scrollTop","totalScroll","scrollHeight","currentScroll","offsetHeight","window","navigator","maxTouchPoints"],"sources":["/Users/greigkerr/Documents/codeclan_work/FridgeProject/ReactFrontEnd/fridgeFrontEnd/node_modules/react-select/lib/internal/ScrollLock/utils.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.preventTouchMove = preventTouchMove;\nexports.allowTouchMove = allowTouchMove;\nexports.preventInertiaScroll = preventInertiaScroll;\nexports.isTouchDevice = isTouchDevice;\n\nfunction preventTouchMove(e) {\n  e.preventDefault();\n}\n\nfunction allowTouchMove(e) {\n  e.stopPropagation();\n}\n\nfunction preventInertiaScroll() {\n  var top = this.scrollTop;\n  var totalScroll = this.scrollHeight;\n  var currentScroll = top + this.offsetHeight;\n\n  if (top === 0) {\n    this.scrollTop = 1;\n  } else if (currentScroll === totalScroll) {\n    this.scrollTop = top - 1;\n  }\n} // `ontouchstart` check works on most browsers\n// `maxTouchPoints` works on IE10/11 and Surface\n\n\nfunction isTouchDevice() {\n  return 'ontouchstart' in window || navigator.maxTouchPoints;\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB;AAC3CF,OAAO,CAACG,cAAc,GAAGA,cAAc;AACvCH,OAAO,CAACI,oBAAoB,GAAGA,oBAAoB;AACnDJ,OAAO,CAACK,aAAa,GAAGA,aAAa;AAErC,SAASH,gBAAgB,CAACI,CAAC,EAAE;EAC3BA,CAAC,CAACC,cAAc,EAAE;AACpB;AAEA,SAASJ,cAAc,CAACG,CAAC,EAAE;EACzBA,CAAC,CAACE,eAAe,EAAE;AACrB;AAEA,SAASJ,oBAAoB,GAAG;EAC9B,IAAIK,GAAG,GAAG,IAAI,CAACC,SAAS;EACxB,IAAIC,WAAW,GAAG,IAAI,CAACC,YAAY;EACnC,IAAIC,aAAa,GAAGJ,GAAG,GAAG,IAAI,CAACK,YAAY;EAE3C,IAAIL,GAAG,KAAK,CAAC,EAAE;IACb,IAAI,CAACC,SAAS,GAAG,CAAC;EACpB,CAAC,MAAM,IAAIG,aAAa,KAAKF,WAAW,EAAE;IACxC,IAAI,CAACD,SAAS,GAAGD,GAAG,GAAG,CAAC;EAC1B;AACF,CAAC,CAAC;AACF;;AAGA,SAASJ,aAAa,GAAG;EACvB,OAAO,cAAc,IAAIU,MAAM,IAAIC,SAAS,CAACC,cAAc;AAC7D"},"metadata":{},"sourceType":"script"}