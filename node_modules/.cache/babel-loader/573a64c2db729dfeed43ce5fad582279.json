{"ast":null,"code":"/* eslint-disable */\n// murmurhash2 via https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js\nfunction murmurhash2_32_gc(str) {\n  var l = str.length,\n    h = l ^ l,\n    i = 0,\n    k;\n  while (l >= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    k ^= k >>> 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;\n    l -= 4;\n    ++i;\n  }\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  }\n  h ^= h >>> 13;\n  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  h ^= h >>> 15;\n  return (h >>> 0).toString(36);\n}\nexport default murmurhash2_32_gc;","map":{"version":3,"names":["murmurhash2_32_gc","str","l","length","h","i","k","charCodeAt","toString"],"sources":["/Users/greigkerr/Documents/codeclan_work/FridgeProject/ReactFrontEnd/fridgeFrontEnd/node_modules/@emotion/hash/dist/hash.esm.js"],"sourcesContent":["/* eslint-disable */\n// murmurhash2 via https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js\nfunction murmurhash2_32_gc(str) {\n  var l = str.length,\n      h = l ^ l,\n      i = 0,\n      k;\n\n  while (l >= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    k ^= k >>> 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;\n    l -= 4;\n    ++i;\n  }\n\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  }\n\n  h ^= h >>> 13;\n  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  h ^= h >>> 15;\n  return (h >>> 0).toString(36);\n}\n\nexport default murmurhash2_32_gc;\n"],"mappings":"AAAA;AACA;AACA,SAASA,iBAAiB,CAACC,GAAG,EAAE;EAC9B,IAAIC,CAAC,GAAGD,GAAG,CAACE,MAAM;IACdC,CAAC,GAAGF,CAAC,GAAGA,CAAC;IACTG,CAAC,GAAG,CAAC;IACLC,CAAC;EAEL,OAAOJ,CAAC,IAAI,CAAC,EAAE;IACbI,CAAC,GAAGL,GAAG,CAACM,UAAU,CAACF,CAAC,CAAC,GAAG,IAAI,GAAG,CAACJ,GAAG,CAACM,UAAU,CAAC,EAAEF,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAACJ,GAAG,CAACM,UAAU,CAAC,EAAEF,CAAC,CAAC,GAAG,IAAI,KAAK,EAAE,GAAG,CAACJ,GAAG,CAACM,UAAU,CAAC,EAAEF,CAAC,CAAC,GAAG,IAAI,KAAK,EAAE;IAC1IC,CAAC,GAAG,CAACA,CAAC,GAAG,MAAM,IAAI,UAAU,IAAI,CAAC,CAACA,CAAC,KAAK,EAAE,IAAI,UAAU,GAAG,MAAM,KAAK,EAAE,CAAC;IAC1EA,CAAC,IAAIA,CAAC,KAAK,EAAE;IACbA,CAAC,GAAG,CAACA,CAAC,GAAG,MAAM,IAAI,UAAU,IAAI,CAAC,CAACA,CAAC,KAAK,EAAE,IAAI,UAAU,GAAG,MAAM,KAAK,EAAE,CAAC;IAC1EF,CAAC,GAAG,CAACA,CAAC,GAAG,MAAM,IAAI,UAAU,IAAI,CAAC,CAACA,CAAC,KAAK,EAAE,IAAI,UAAU,GAAG,MAAM,KAAK,EAAE,CAAC,GAAGE,CAAC;IAC9EJ,CAAC,IAAI,CAAC;IACN,EAAEG,CAAC;EACL;EAEA,QAAQH,CAAC;IACP,KAAK,CAAC;MACJE,CAAC,IAAI,CAACH,GAAG,CAACM,UAAU,CAACF,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,KAAK,EAAE;IAE3C,KAAK,CAAC;MACJD,CAAC,IAAI,CAACH,GAAG,CAACM,UAAU,CAACF,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC;IAE1C,KAAK,CAAC;MACJD,CAAC,IAAIH,GAAG,CAACM,UAAU,CAACF,CAAC,CAAC,GAAG,IAAI;MAC7BD,CAAC,GAAG,CAACA,CAAC,GAAG,MAAM,IAAI,UAAU,IAAI,CAAC,CAACA,CAAC,KAAK,EAAE,IAAI,UAAU,GAAG,MAAM,KAAK,EAAE,CAAC;EAAC;EAG/EA,CAAC,IAAIA,CAAC,KAAK,EAAE;EACbA,CAAC,GAAG,CAACA,CAAC,GAAG,MAAM,IAAI,UAAU,IAAI,CAAC,CAACA,CAAC,KAAK,EAAE,IAAI,UAAU,GAAG,MAAM,KAAK,EAAE,CAAC;EAC1EA,CAAC,IAAIA,CAAC,KAAK,EAAE;EACb,OAAO,CAACA,CAAC,KAAK,CAAC,EAAEI,QAAQ,CAAC,EAAE,CAAC;AAC/B;AAEA,eAAeR,iBAAiB"},"metadata":{},"sourceType":"module"}