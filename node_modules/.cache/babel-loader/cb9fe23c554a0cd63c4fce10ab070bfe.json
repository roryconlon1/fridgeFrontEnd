{"ast":null,"code":"import _slicedToArray from \"/Users/greigkerr/Documents/codeclan_work/FridgeProject/ReactFrontEnd/fridgeFrontEnd/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/greigkerr/Documents/codeclan_work/FridgeProject/ReactFrontEnd/fridgeFrontEnd/src/containers/FoodContainer.js\";\n\nimport React, { useEffect, useState } from \"react\"; // import { BrowserRouter as Routes, Route } from \"react-router-dom\";\n\nimport FoodList from \"../components/foods/FoodList\";\nimport Request from \"../helpers/request\";\nimport { Route } from \"react-router-dom\";\nimport { Routes } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport FoodDetail from \"../components/foods/FoodDetail\";\n\nvar FoodContainer = function FoodContainer(_ref) {\n  var foodElements = _ref.foodElements;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      foods = _useState2[0],\n      setFoods = _useState2[1];\n\n  useEffect(function () {\n    var request = new Request();\n    request.get(\"/api/foods\").then(function (data) {\n      setFoods(data);\n    });\n  }, []);\n\n  var findFoodById = function findFoodById(id) {\n    return foods.find(function (food) {\n      return food.id === parseInt(id);\n    });\n  };\n\n  var FoodDetailWrapper = function FoodDetailWrapper() {\n    var _useParams = useParams(),\n        id = _useParams.id;\n\n    var foundFood = findFoodById(id);\n    return /*#__PURE__*/React.createElement(FoodDetail, {\n      food: foundFood,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \":id\",\n    element: /*#__PURE__*/React.createElement(FoodDetailWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 44\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/React.createElement(FoodList, {\n      foods: foods,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 42\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default FoodContainer;","map":{"version":3,"names":["React","useEffect","useState","FoodList","Request","Route","Routes","useParams","FoodDetail","FoodContainer","foodElements","foods","setFoods","request","get","then","data","findFoodById","id","find","food","parseInt","FoodDetailWrapper","foundFood"],"sources":["/Users/greigkerr/Documents/codeclan_work/FridgeProject/ReactFrontEnd/fridgeFrontEnd/src/containers/FoodContainer.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import { BrowserRouter as Routes, Route } from \"react-router-dom\";\nimport FoodList from \"../components/foods/FoodList\";\nimport Request from \"../helpers/request\";\nimport { Route } from \"react-router-dom\";\nimport { Routes } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport FoodDetail from \"../components/foods/FoodDetail\";\n\nconst FoodContainer = ({foodElements}) => {\n\n\n    const [foods, setFoods] = useState([])\n\n    useEffect(() => {\n        const request = new Request()\n        request.get(\"/api/foods\")\n            .then((data) => {\n                setFoods(data)\n            })\n    }, [])\n\n    const findFoodById = (id) => {\n        return foods.find((food) => {\n            return food.id === parseInt(id)\n        })\n    }\n\n    const FoodDetailWrapper = () => {\n        const { id } = useParams();\n        let foundFood = findFoodById(id)\n        return <FoodDetail food={foundFood} />\n    }\n\n\n    return (\n        <div>\n            <Routes>\n                <Route path=\":id\" element={<FoodDetailWrapper/>} />\n                <Route path=\"/\" element={<FoodList foods={foods} />} />\n            </Routes>\n        </div>\n    )\n}\n\nexport default FoodContainer;\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,gCAAvB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAoB;EAAA,IAAlBC,YAAkB,QAAlBA,YAAkB;;EAAA,gBAGZR,QAAQ,CAAC,EAAD,CAHI;EAAA;EAAA,IAG/BS,KAH+B;EAAA,IAGxBC,QAHwB;;EAKtCX,SAAS,CAAC,YAAM;IACZ,IAAMY,OAAO,GAAG,IAAIT,OAAJ,EAAhB;IACAS,OAAO,CAACC,GAAR,CAAY,YAAZ,EACKC,IADL,CACU,UAACC,IAAD,EAAU;MACZJ,QAAQ,CAACI,IAAD,CAAR;IACH,CAHL;EAIH,CANQ,EAMN,EANM,CAAT;;EAQA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,EAAD,EAAQ;IACzB,OAAOP,KAAK,CAACQ,IAAN,CAAW,UAACC,IAAD,EAAU;MACxB,OAAOA,IAAI,CAACF,EAAL,KAAYG,QAAQ,CAACH,EAAD,CAA3B;IACH,CAFM,CAAP;EAGH,CAJD;;EAMA,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;IAAA,iBACbf,SAAS,EADI;IAAA,IACpBW,EADoB,cACpBA,EADoB;;IAE5B,IAAIK,SAAS,GAAGN,YAAY,CAACC,EAAD,CAA5B;IACA,oBAAO,oBAAC,UAAD;MAAY,IAAI,EAAEK,SAAlB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAP;EACH,CAJD;;EAOA,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,KAAD;IAAO,IAAI,EAAC,KAAZ;IAAkB,OAAO,eAAE,oBAAC,iBAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAEI,oBAAC,KAAD;IAAO,IAAI,EAAC,GAAZ;IAAgB,OAAO,eAAE,oBAAC,QAAD;MAAU,KAAK,EAAEZ,KAAjB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CADJ,CADJ;AAQH,CAlCD;;AAoCA,eAAeF,aAAf"},"metadata":{},"sourceType":"module"}